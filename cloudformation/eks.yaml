AWSTemplateFormatVersion: '2010-09-09'
Description: 'EKS cluster and node groups for SIM2Serve application'

Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String

  VPC:
    Description: Choose which VPC the cluster should be deployed to
    Type: AWS::EC2::VPC::Id

  PrivateSubnet1:
    Description: Choose which private subnet the cluster should be deployed to
    Type: AWS::EC2::Subnet::Id

  PrivateSubnet2:
    Description: Choose which private subnet the cluster should be deployed to
    Type: AWS::EC2::Subnet::Id

  PublicSubnet1:
    Description: Choose which public subnet the cluster should be deployed to
    Type: AWS::EC2::Subnet::Id

  PublicSubnet2:
    Description: Choose which public subnet the cluster should be deployed to
    Type: AWS::EC2::Subnet::Id

  EKSSecurityGroup:
    Description: Security group for the EKS cluster
    Type: AWS::EC2::SecurityGroup::Id

  NodeInstanceType:
    Description: EC2 instance type for the worker nodes
    Type: String

  NodeGroupDesiredCapacity:
    Description: Desired capacity of Node Group ASG
    Type: Number

  NodeGroupMaxSize:
    Description: Maximum size of Node Group ASG
    Type: Number

  NodeGroupMinSize:
    Description: Minimum size of Node Group ASG
    Type: Number

Resources:
  # EKS Cluster Service Role
  EKSServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${EnvironmentName}-eks-service-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-eks-service-role

  # EKS Cluster
  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Sub ${EnvironmentName}-cluster
      Version: '1.28'
      RoleArn: !GetAtt EKSServiceRole.Arn
      ResourcesVpcConfig:
        SubnetIds:
          - !Ref PrivateSubnet1
          - !Ref PrivateSubnet2
          - !Ref PublicSubnet1
          - !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-cluster

  # EKS Node Group Service Role
  EKSNodeGroupRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${EnvironmentName}-eks-nodegroup-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-eks-nodegroup-role

  # EKS Node Group
  EKSNodeGroup:
    Type: AWS::EKS::Nodegroup
    DependsOn: EKSCluster
    Properties:
      ClusterName: !Ref EKSCluster
      NodegroupName: !Sub ${EnvironmentName}-workers
      NodeRole: !GetAtt EKSNodeGroupRole.Arn
      Subnets:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      InstanceTypes:
        - !Ref NodeInstanceType
      AmiType: AL2_x86_64
      CapacityType: ON_DEMAND
      DiskSize: 20
      ScalingConfig:
        DesiredSize: !Ref NodeGroupDesiredCapacity
        MaxSize: !Ref NodeGroupMaxSize
        MinSize: !Ref NodeGroupMinSize
      UpdateConfig:
        MaxUnavailable: 1
      Labels:
        Environment: !Ref EnvironmentName
        NodeGroup: workers
      Tags:
        Environment: !Ref EnvironmentName
        Name: !Sub ${EnvironmentName}-worker-node

Outputs:
  EKSClusterName:
    Description: Name of the EKS cluster
    Value: !Ref EKSCluster
    Export:
      Name: !Sub "${EnvironmentName}-EKSClusterName"

  ClusterArn:
    Description: ARN of the EKS cluster
    Value: !GetAtt EKSCluster.Arn

  ClusterEndpoint:
    Description: Endpoint for EKS control plane
    Value: !GetAtt EKSCluster.Endpoint
    Export:
      Name: !Sub "${EnvironmentName}-EKSClusterEndpoint"

  ClusterSecurityGroup:
    Description: Security group for the cluster control plane communication with worker nodes
    Value: !GetAtt EKSCluster.ClusterSecurityGroupId

  NodeGroupArn:
    Description: ARN of the EKS node group
    Value: !GetAtt EKSNodeGroup.Arn
